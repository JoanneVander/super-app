from flask import Flask, render_template, request
import sqlite3

app = Flask(__name__)

# Função para conectar ao banco de dados
def get_db_connection():
    conn = sqlite3.connect('servicos.db')
    conn.row_factory = sqlite3.Row  # Para que possamos acessar as colunas pelo nome
    return conn

# Cria a tabela se não existir
def init_db():
    conn = get_db_connection()
    conn.execute('''
        CREATE TABLE IF NOT EXISTS ordens_servico (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            local TEXT NOT NULL,
            servico TEXT NOT NULL,
            status TEXT NOT NULL,
            setor TEXT NOT NULL,
            observacoes TEXT
        )
    ''')
    conn.commit()
    conn.close()

@app.route('/', methods=['GET', 'POST'])
def order_service():
    if request.method == 'POST':
        local = request.form['local']
        servico = request.form['servico']
        status = request.form['status']
        setor = request.form['setor']
        obs = request.form['observacoes']
        
        # Inserindo os dados no banco de dados
        conn = get_db_connection()
        try:
            conn.execute('''
                INSERT INTO ordens_servico (local, servico, status, setor, observacoes)
                VALUES (?, ?, ?, ?, ?)
            ''', (local, servico, status, setor, obs))
            conn.commit()
            return "Ordem de Serviço Enviada!"
        except sqlite3.Error as e:
            return f"Erro ao enviar a ordem de serviço: {e}"
        finally:
            conn.close()

    return render_template('order_service.html')

if __name__ == '__main__':
    init_db()  # Inicializa o banco de dados
    app.run(debug=True)
